INCLUDE(CheckIncludeFiles)
INCLUDE(CheckSymbolExists)
INCLUDE(FindCurses)

IF(NOT ${CURSES_FOUND})
  MESSAGE(FATAL_ERROR "Unable to find ncurses.")
ENDIF()

CHECK_SYMBOL_EXISTS(alarm "unistd.h" HAVE_ALARM)
CHECK_INCLUDE_FILES("arpa/inet.h" HAVE_ARPA_INET_H)
CHECK_SYMBOL_EXISTS(getgid "unistd.h" HAVE_GETGID)
CHECK_SYMBOL_EXISTS(getloadavg "stdlib.h" HAVE_GETLOADAVG)
CHECK_SYMBOL_EXISTS(getpass "unistd.h" HAVE_GETPASS)
CHECK_SYMBOL_EXISTS(getpwuid "unistd.h" HAVE_GETPWUID)
CHECK_SYMBOL_EXISTS(getuid "unistd.h" HAVE_GETUID)
CHECK_INCLUDE_FILES("ncurses/term.h" HAVE_NCURSES_TERM_H)
CHECK_SYMBOL_EXISTS(nlist "nlist.h" HAVE_NLIST)
CHECK_INCLUDE_FILES("nlist.h" HAVE_NLIST_H)
CHECK_INCLUDE_FILES("process.h" HAVE_PROCESS_H)
CHECK_INCLUDE_FILES("pwd.h" HAVE_PWD_H)
CHECK_SYMBOL_EXISTS(setgid "unistd.h" HAVE_SETGID)
CHECK_SYMBOL_EXISTS(setregid "unistd.h" HAVE_SETREGID)
CHECK_SYMBOL_EXISTS(setresgid "unistd.h" HAVE_SETRESGID)
CHECK_SYMBOL_EXISTS(setresuid "unistd.h" HAVE_SETRESUID)
CHECK_SYMBOL_EXISTS(setreuid "unistd.h" HAVE_SETREUID)
CHECK_SYMBOL_EXISTS(setuid "unistd.h" HAVE_SETUID)
CHECK_SYMBOL_EXISTS(spawnl "process.h" HAVE_SPAWNL)
CHECK_INCLUDE_FILES("sys/utsname.h" HAVE_SYS_UTSNAME_H)
CHECK_INCLUDE_FILES("termios.h" HAVE_TERMIOS_H)
CHECK_INCLUDE_FILES("term.h" HAVE_TERM_H)
CHECK_INCLUDE_FILES("unistd.h" HAVE_UNISTD_H)
CHECK_SYMBOL_EXISTS(_spawnl "process.h" HAVE__SPAWNL)

CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/config.h.in"
  "${CMAKE_CURRENT_SOURCE_DIR}/config.h"
)

ADD_DEFINITIONS(-DHAVE_CONFIG_H)

ADD_EXECUTABLE(
  rogue
  ${CMAKE_CURRENT_SOURCE_DIR}/armor.c
  ${CMAKE_CURRENT_SOURCE_DIR}/chase.c
  ${CMAKE_CURRENT_SOURCE_DIR}/command.c
  ${CMAKE_CURRENT_SOURCE_DIR}/daemon.c
  ${CMAKE_CURRENT_SOURCE_DIR}/daemons.c
  ${CMAKE_CURRENT_SOURCE_DIR}/extern.c
  ${CMAKE_CURRENT_SOURCE_DIR}/fight.c
  ${CMAKE_CURRENT_SOURCE_DIR}/init.c
  ${CMAKE_CURRENT_SOURCE_DIR}/io.c
  ${CMAKE_CURRENT_SOURCE_DIR}/list.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mach_dep.c
  ${CMAKE_CURRENT_SOURCE_DIR}/main.c
  ${CMAKE_CURRENT_SOURCE_DIR}/mdport.c
  ${CMAKE_CURRENT_SOURCE_DIR}/misc.c
  ${CMAKE_CURRENT_SOURCE_DIR}/monsters.c
  ${CMAKE_CURRENT_SOURCE_DIR}/move.c
  ${CMAKE_CURRENT_SOURCE_DIR}/new_level.c
  ${CMAKE_CURRENT_SOURCE_DIR}/options.c
  ${CMAKE_CURRENT_SOURCE_DIR}/pack.c
  ${CMAKE_CURRENT_SOURCE_DIR}/passages.c
  ${CMAKE_CURRENT_SOURCE_DIR}/potions.c
  ${CMAKE_CURRENT_SOURCE_DIR}/rings.c
  ${CMAKE_CURRENT_SOURCE_DIR}/rip.c
  ${CMAKE_CURRENT_SOURCE_DIR}/rooms.c
  ${CMAKE_CURRENT_SOURCE_DIR}/save.c
  ${CMAKE_CURRENT_SOURCE_DIR}/scrolls.c
  ${CMAKE_CURRENT_SOURCE_DIR}/state.c
  ${CMAKE_CURRENT_SOURCE_DIR}/sticks.c
  ${CMAKE_CURRENT_SOURCE_DIR}/things.c
  ${CMAKE_CURRENT_SOURCE_DIR}/vers.c
  ${CMAKE_CURRENT_SOURCE_DIR}/weapons.c
  ${CMAKE_CURRENT_SOURCE_DIR}/wizard.c
  ${CMAKE_CURRENT_SOURCE_DIR}/xcrypt.c
)

TARGET_INCLUDE_DIRECTORIES(
  rogue
  PRIVATE
    ${CURSES_INCLUDE_DIR}
)

TARGET_LINK_LIBRARIES(
  rogue
  ${CURSES_LIBRARIES}
)

INSTALL(
  TARGETS
    rogue
  RUNTIME DESTINATION
    bin
)
